<h1>Food Storage Inventory</h1>
<a href="/">‚Üê Back to Weekly Plan</a>

<form method="POST" action="/storage" id="storageForm">
  <!-- Barcode Lookup -->
  <input id="barcode" placeholder="Scan or type barcode" />
  <button type="button" onclick="fetchFromBarcode()">üîç Lookup</button>
  <br><br>

  <!-- Main Form -->
  <input name="name" id="name" placeholder="Food name" required />
  <input name="quantity" placeholder="How many units?" type="number" value="1" required />
  <input name="unit" placeholder="e.g. bag, box" value="bag" />
  <input name="servingsPerUnit" placeholder="Servings per unit" type="number" value="1" required />
  <input name="expires" type="date" />
  <select name="category" required>
    <option value="">-- Select Category --</option>
    <option value="Breakfast">Breakfast</option>
    <option value="Lunch">Lunch</option>
    <option value="Dinner">Dinner</option>
    <option value="Snack">Snack</option>
    <option value="Pantry">Pantry</option>
    <option value="Freezer">Freezer</option>
  </select>
  <button type="submit">Add</button>
</form>

<!-- Lookup result message -->
<p id="lookupResult" style="color: green;"></p>

<hr>

<h2>Current Inventory</h2>

<% if (Object.keys(grouped).length === 0) { %>
  <p>No items in storage yet.</p>
<% } else { %>
  <% for (let category in grouped) { %>
    <h3><%= category %></h3>
    <ul>
      <% grouped[category].forEach(item => { %>
        <li>
          <strong><%= item.name %></strong>:
          <%= item.quantity %> <%= item.unit %><%= item.quantity > 1 ? 's' : '' %>
          (Expires: <%= item.expires ? new Date(item.expires).toDateString() : "N/A" %>)<br>
          <em>Category: <%= item.category %></em><br>

          <% if (item.stats) { %>
            üçΩ Total Calories: <%= item.stats.totalCalories.toLocaleString() %> kcal  
            | Protein: <%= item.stats.totalProtein %>g  
            | Covers: <%= item.stats.daysOfSupport %> day(s) for 5 people
          <% } else { %>
            <em>Nutrition data incomplete.</em>
          <% } %>

          <form method="POST" action="/storage/delete/<%= item._id %>" style="display:inline;">
            <button onclick="return confirm('Delete this item?')">üóëÔ∏è</button>
          </form>
          <a href="/storage/edit/<%= item._id %>">‚úèÔ∏è Edit</a>
        </li>
      <% }) %>
    </ul>
  <% } %>
<% } %>

<!-- Barcode Lookup Script -->
<script>
  async function fetchFromBarcode() {
    const barcode = document.getElementById("barcode").value.trim();
    const result = document.getElementById("lookupResult");
    const nameInput = document.getElementById("name");

    if (!barcode) {
      alert("Please enter a barcode");
      return;
    }

    try {
      const res = await fetch(`https://world.openfoodfacts.org/api/v0/product/${barcode}.json`);
      const data = await res.json();

      if (data.status !== 1 || !data.product || !data.product.nutriments) {
        result.textContent = "‚ùå Product not found.";
        return;
      }

      const product = data.product;
      const p = product.nutriments || {};

      // Fill in name
      nameInput.value = product.product_name || "Unnamed Product";

      // Remove previous hidden input if exists
      document.querySelector("input[name='caloriesPerServing']")?.remove();

      // Add hidden calories field
      const hiddenCalories = document.createElement("input");
      hiddenCalories.type = "hidden";
      hiddenCalories.name = "caloriesPerServing";
      hiddenCalories.value = p["energy-kcal_serving"] || 0;
      document.getElementById("storageForm").appendChild(hiddenCalories);

      result.textContent = "‚úÖ Product info loaded. Fill in quantity and other fields.";
    } catch (err) {
      console.error(err);
      result.textContent = "‚ùå Error fetching product.";
    }
  }
</script>
